include:
  - project: 'univention/documentation/sphinx-docker'
    file: 'pipeline/sphinx.yml'

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_OPEN_MERGE_REQUESTS
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "webide"

stages:
  - build
  - merge
  - production

variables:
  DOCS_DIR: "docs"
  PUBLIC_CI_REGISTRY: quay.io
  PUBLIC_CI_REGISTRY_IMAGE: univention/intercom-service
  LANG: "C.UTF-8"
  DEBIAN_FRONTEND: noninteractive
  UNIVENTION_BASECONF: /dev/null
  DOC_TARGET_VERSION: "1.4"
  DOC_TARGET_NAME: "intercom-service"
  DOC_TARGET_PATH: "$DOC_TARGET_NAME/$DOC_TARGET_VERSION"

docs-linkcheck:
  extends: .sphinx-linkcheck-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-spelling:
  extends: .sphinx-spelling-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-html:
  extends: .sphinx-html-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-pdf:
  extends: .sphinx-pdf-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-warnings:
  extends: .sphinx-warnings-template
  rules:
    - changes:
      - $DOCS_DIR/**/*


build_image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # install KNUT CA (not needed if publishing to quay.io)
    # - install -m 644 "$KNUT_CA" /kaniko/ssl/certs/knut.pem
    # - cat /kaniko/ssl/certs/knut.pem >> /kaniko/ssl/certs/ca-certificates.crt
    - if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ] ; then export DOCKER_TAG="develop"; else export DOCKER_TAG="latest" ; fi
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${PUBLIC_CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${PUBLIC_CI_REGISTRY_USER}" "${PUBLIC_CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - cd "${CI_PROJECT_DIR}/intercom"
    - /kaniko/executor
      --force
      --context "${CI_PROJECT_DIR}/intercom"
      --dockerfile "${CI_PROJECT_DIR}/intercom/Dockerfile"
      --destination "${PUBLIC_CI_REGISTRY}/${PUBLIC_CI_REGISTRY_IMAGE}:${DOCKER_TAG}"

docs-merge-to-one-artifact:
  extends: .sphinx-merge-template
  needs:
    - job: docs-html
    - job: docs-pdf
    - job: docs-spelling
      artifacts: false
    - job: docs-linkcheck
      artifacts: false
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
      when: manual

# The template has inherit:variables:false to prevent the passing of pipeline
# variables to downstream, and therefore $DOCS_DIR is not available here.
docs-create-production-merge-request:
  extends: .sphinx-docs-merge-request-template
  needs:
    - job: docs-merge-to-one-artifact
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
      - docs/**/*
